class World

instance variables
    io : IO := new IO();

operations

    public round : (real) ==> real
    round(x) == (
        dcl y : real := x;
        y := y * 1000;
        y := floor y;
        y := y / 1000;
        return y

    );
    
    public echoState : (nat) ==> ()
    echoState(counter) == (
        dcl succ : bool;
        dcl str : seq of char := "";   
        if (counter = 0) then (
            str := str ^ "counter  |  ";
            str := str ^ "env_q  |  ";
            str := str ^ "env_qt  |  ";
            str := str ^ "env_motor_state  |  ";
            str := str ^ "env_errorCorrection  |  ";
            str := str ^ "ctl_q  |  ";
            str := str ^ "ctl_qt  |  ";
            str := str ^ "ctl_motor_state  |  ";
            str := str ^ "\n";
            succ := io.echo(str);
        )
        else (
            str := str ^ VDMUtil`val2seq_of_char[nat](counter);
            str := str ^ "  |  ";
            str := str ^ VDMUtil`val2seq_of_char[real](round(RobotSystem`Robot.env_q));
            str := str ^ "  |  ";
            str := str ^ VDMUtil`val2seq_of_char[real](round(RobotSystem`Robot.env_qt));
            str := str ^ "  |  ";
            str := str ^ VDMUtil`val2seq_of_char[nat](RobotSystem`Robot.env_motor_state);
            str := str ^ "  |  ";
            str := str ^ VDMUtil`val2seq_of_char[real](round(RobotSystem`Robot.env_errorCorrection));
            str := str ^ "  |  ";
            str := str ^ VDMUtil`val2seq_of_char[real](round(RobotSystem`Robot_controller.ctl_q));
            str := str ^ "  |  ";
            str := str ^ VDMUtil`val2seq_of_char[real](round(RobotSystem`Robot_controller.ctl_qt));
            str := str ^ "  |  ";
            str := str ^ VDMUtil`val2seq_of_char[nat](RobotSystem`Robot_controller.ctl_motor_state);
            str := str ^ "  |  ";
            str := str ^ "\n";

            succ := io.echo(str);
        )
    );

    public Scenario1 : () ==> bool
    Scenario1() == (
        RobotSystem`Robot_controller.motorOn();
        echoState(0);
        RobotSystem`Robot.setErrorCorrection(1.5);
        echoState(1);
        RobotSystem`Robot_controller.setTarget(3.14/4);
        echoState(2);
        RobotSystem`Robot_controller.monitorArm();
        echoState(3);
        RobotSystem`Robot.step(1);
        echoState(4);
        RobotSystem`Robot_controller.monitorArm();
        echoState(5);
        RobotSystem`Robot.step(1);
        echoState(6);
        RobotSystem`Robot_controller.monitorArm();
        echoState(7);
        RobotSystem`Robot.step(1);
        echoState(8);
        RobotSystem`Robot_controller.monitorArm();
        echoState(9);
        RobotSystem`Robot.step(1);
        echoState(10);
        RobotSystem`Robot_controller.monitorArm();
        echoState(11);
        RobotSystem`Robot_controller.motorOff();

        return true;
    );
    
    public Scenario2 : () ==> bool
    Scenario2() == (
        RobotSystem`Robot_controller.motorOn();
        echoState(0);
        RobotSystem`Robot.setErrorCorrection(0.8);
        echoState(1);
        RobotSystem`Robot_controller.setTarget(3.14/4);
        echoState(2);
        RobotSystem`Robot_controller.monitorArm();
        echoState(3);
        RobotSystem`Robot.step(1);
        echoState(4);
        RobotSystem`Robot_controller.monitorArm();
        echoState(5);
        RobotSystem`Robot.step(1);
        echoState(6);
        RobotSystem`Robot_controller.monitorArm();
        echoState(7);
        RobotSystem`Robot.step(1);
        echoState(8);
        RobotSystem`Robot_controller.monitorArm();
        echoState(9);
        RobotSystem`Robot.step(1);
        echoState(10);
        RobotSystem`Robot_controller.monitorArm();
        echoState(11);
        RobotSystem`Robot_controller.motorOff();

        return true;
    );

    public Scenario3 : () ==> bool
    Scenario3() == (
        RobotSystem`Robot_controller.motorOn();
        echoState(0);
        RobotSystem`Robot.setErrorCorrection(1);
        echoState(1);
        RobotSystem`Robot_controller.setTarget(3.14/4);
        echoState(2);
        RobotSystem`Robot_controller.monitorArm();
        echoState(3);
        RobotSystem`Robot.step(1);
        echoState(4);
        RobotSystem`Robot_controller.monitorArm();
        echoState(5);
        RobotSystem`Robot.step(1);
        echoState(6);
        RobotSystem`Robot_controller.monitorArm();
        echoState(7);
        RobotSystem`Robot.step(1);
        echoState(8);
        RobotSystem`Robot_controller.monitorArm();
        echoState(9);
        RobotSystem`Robot_controller.motorOff();
        return true;
    );
    public Scenario4 : () ==> bool
    Scenario4() == (
        RobotSystem`Robot_controller.motorOn();
        echoState(0);
        RobotSystem`Robot.setErrorCorrection(0.2);
        echoState(1);
        RobotSystem`Robot_controller.setTarget(3.14/4);
        echoState(2);
        RobotSystem`Robot_controller.monitorArm();
        echoState(3);
        RobotSystem`Robot.step(1);
        echoState(4);
        RobotSystem`Robot_controller.monitorArm();
        echoState(5);
        RobotSystem`Robot.step(1);
        echoState(6);
        RobotSystem`Robot_controller.monitorArm();
        echoState(7);
        RobotSystem`Robot.step(1);
        echoState(8);
        RobotSystem`Robot_controller.monitorArm();
        echoState(9);
        RobotSystem`Robot.step(1);
        echoState(10);
        RobotSystem`Robot_controller.monitorArm();
        echoState(11);
        RobotSystem`Robot.step(1);
        echoState(12);
        RobotSystem`Robot_controller.monitorArm();
        echoState(13);
        RobotSystem`Robot.step(1);
        echoState(14);
        RobotSystem`Robot_controller.monitorArm();
        echoState(15);
        RobotSystem`Robot_controller.motorOff();
        return true;
    );

    public Scenario5 : () ==> bool
    Scenario5() == (
        RobotSystem`Robot_controller.motorOn();
        echoState(0);
        RobotSystem`Robot.setErrorCorrection(0.8);
        echoState(1);
        RobotSystem`Robot_controller.setTarget(3.14/4);
        echoState(2);
        RobotSystem`Robot_controller.monitorArm();
        echoState(3);
        RobotSystem`Robot.step(1);
        echoState(4);
        -- no monitoring here --
        echoState(5);
        RobotSystem`Robot.step(1);
        echoState(6);
        RobotSystem`Robot_controller.monitorArm();
        echoState(7);
        RobotSystem`Robot.step(1);
        echoState(8);
        -- no monitoring here --
        echoState(9);
        RobotSystem`Robot.step(1);
        echoState(10);
        RobotSystem`Robot_controller.monitorArm();
        echoState(11);
        RobotSystem`Robot_controller.motorOff();
        return true;
    );

    public Scenario6 : () ==> bool
    Scenario6() == (
        echoState(0);
        RobotSystem`Robot.setErrorCorrection(0.8);
        echoState(1);
        RobotSystem`Robot_controller.setTarget(3.14/4);
        echoState(2);
        RobotSystem`Robot_controller.controlArm();
        echoState(3);
        RobotSystem`Robot_controller.monitorArm();
        echoState(4);
        RobotSystem`Robot.step(1);
        echoState(5);
        RobotSystem`Robot_controller.controlArm();
        echoState(6);
        RobotSystem`Robot_controller.monitorArm();
        echoState(7);
        RobotSystem`Robot.step(1);
        echoState(8);
        RobotSystem`Robot_controller.controlArm();
        echoState(9);
        RobotSystem`Robot_controller.monitorArm();
        echoState(10);
        RobotSystem`Robot.step(1);
        echoState(11);
        RobotSystem`Robot_controller.controlArm();
        echoState(12);
        RobotSystem`Robot_controller.monitorArm();
        echoState(13);
        RobotSystem`Robot.step(1);
        echoState(14);
        RobotSystem`Robot_controller.controlArm();
        echoState(15);
        RobotSystem`Robot_controller.monitorArm();
        echoState(16);

        return true;
    );
    
    public Scenario7 : () ==> bool
    Scenario7() == (
        echoState(0);
        RobotSystem`Robot.setErrorCorrection(0.8);
        echoState(1);
        RobotSystem`Robot_controller.setTarget(3.14/4);
        echoState(2);
        RobotSystem`Robot_controller.controlArm();
        echoState(3);
        RobotSystem`Robot_controller.monitorArm();
        echoState(4);
        RobotSystem`Robot.step(1);
        echoState(5);
        -- no monitoring here --
        echoState(6);
        RobotSystem`Robot_controller.controlArm();
        echoState(7);
        RobotSystem`Robot.step(1);
        echoState(8);
        RobotSystem`Robot_controller.controlArm();
        echoState(9);
        RobotSystem`Robot_controller.monitorArm();
        echoState(10);
        RobotSystem`Robot.step(1);
        echoState(11);
        -- no monitoring here --
        echoState(12);
        RobotSystem`Robot_controller.controlArm();
        echoState(13);
        RobotSystem`Robot.step(1);
        echoState(14);
        RobotSystem`Robot_controller.controlArm();
        echoState(15);
        RobotSystem`Robot_controller.monitorArm();
        echoState(16);
        -- controlArm() has outdated monitoring info thus it will turn the motor off later than necessary --

        return true;
    );

end World